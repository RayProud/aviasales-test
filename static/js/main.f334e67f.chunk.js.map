{"version":3,"sources":["components/header/logo.svg","redux/filters/actions.ts","redux/system/actions.ts","redux/tickets/actions.ts","redux/actionsCombine.ts","helpers/formatters.ts","components/layovers/layovers.tsx","components/ticket/ticket.tsx","components/tickets/tickets.tsx","components/header/header.tsx","components/plug/plug.tsx","components/error/error.tsx","App.tsx","redux/system/reducers.ts","redux/filters/reducers.ts","redux/tickets/reducers.ts","redux/sagas.ts","redux/store.ts","index.tsx"],"names":["module","exports","changeMostFilter","cheapest","type","changeLayoverFilter","layovers","turnAllLayoverFiltersOn","turnAllLayoverFiltersOff","changeTheme","theme","changeLocale","locale","endSearch","hasError","startSearching","ticketsResponseSuccess","tickets","filters","system","getPluralForm","form","one","few","many","other","Layovers","onChangeAll","event","props","onSwitchOn","onSwitchOff","target","checked","onChange","value","id","getLayoverTitle","stopsKeyword","plural","Intl","PluralRules","select","Number","this","switchOnState","Object","values","every","filter","className","htmlFor","keys","map","i","length","key","React","PureComponent","Ticket","ticket","price","segments","carrier","formettedPrice","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","src","alt","srcSet","date","destination","origin","duration","stops","start","DateTime","fromISO","end","plus","minutes","interval","until","hasStops","layoversForm","stopsHeding","stopsInfo","stop","join","toFormat","toDuration","Tickets","onChangeRadio","onSelect","name","Header","logo","Plug","Error","actions","App","Component","mapDispatchToProps","connect","state","initialState","changeAllLayovers","prevLayovers","reduce","prev","ticketsReducer","action","getTickets","listenFiltersChange","rootSaga","getFilters","getSystem","myWorker","Worker","createWorkerChannel","eventChannel","emit","onmessage","result","data","terminate","call","workerChannel","take","payload","stopSearch","error","put","postMessage","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f334e67f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6e8d101a.svg\";","import { LayoverFilter } from './types';\n\nexport const changeMostFilter = function(cheapest: boolean) {\n    return {\n        type: 'CHANGE_MOST_FILTER' as const,\n        cheapest\n    };\n};\n\nexport const changeLayoverFilter = function(layovers: LayoverFilter) {\n    return {\n        type: 'CHANGE_LAYOVER_FILTER' as const,\n        layovers\n    };\n};\n\nexport const turnAllLayoverFiltersOn = function() {\n    return {\n        type: 'TURN_ALL_LAYOVER_FILTERS_ON' as const\n    };\n};\n\nexport const turnAllLayoverFiltersOff = function() {\n    return {\n        type: 'TURN_ALL_LAYOVER_FILTERS_OFF' as const\n    };\n};\n","export const changeTheme = function(theme: string) {\n    return {\n        type: 'CHANGE_THEME' as const,\n        theme\n    };\n};\n\nexport const changeLocale = function(locale: string) {\n    return {\n        type: 'CHANGE_LOCALE' as const,\n        locale\n    };\n};\n\nexport const endSearch = function() {\n    return {\n        type: 'END_SEARCH' as const\n    };\n}\n\nexport const hasError = function() {\n    return {\n        type: 'HAS_ERROR' as const\n    };\n}\n","import { Ticket } from './types';\n\nexport const startSearching = function() {\n    return {\n        type: 'START_SEARCHING' as const\n    };\n};\n\nexport const ticketsResponseSuccess = function(tickets: Ticket[]) {\n    return {\n        type: 'PUT_TICKETS' as const,\n        tickets\n    };\n}\n\nexport type StartSearching = ReturnType<typeof startSearching>;\nexport type TicketsResponseSuccess = ReturnType<typeof ticketsResponseSuccess>;\n","import * as filters from './filters/actions';\nimport * as system from './system/actions';\nimport * as tickets from './tickets/actions';\n\nexport default {\n    ...filters,\n    ...system,\n    ...tickets\n};\n","export const getPluralForm = function(form: string, one: string, few: string, many: string, other: string) {\n    switch (form) {\n        case 'one':\n            return one;\n        case 'few':\n            return few;\n        case 'many':\n            return many;\n        default:\n            return other;\n    }\n};\n","import React from 'react';\nimport { AppState } from '../../redux/store';\nimport { getPluralForm } from '../../helpers/formatters';\nimport { LayoverFilter } from '../../redux/filters/types';\nimport './layovers.css';\n\ninterface Props {\n    filters: AppState['filters']['layovers'];\n    onChange: (filters: LayoverFilter) => void;\n    onSwitchOn: () => void;\n    onSwitchOff: () => void;\n}\n\nclass Layovers extends React.PureComponent<Props> {\n    onChangeAll = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { onSwitchOn, onSwitchOff } = this.props;\n        const value = event.target.checked;\n\n        return !!value ? onSwitchOn() : onSwitchOff();\n    }\n\n    onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { onChange } = this.props;\n        const value = event.target.checked;\n        const id = event.target.id;\n\n        onChange({\n            [id]: value\n        });\n    }\n\n    getLayoverTitle = (stopsKeyword: string) => {\n        const plural = new Intl.PluralRules('ru-RU');\n\n        switch (stopsKeyword) {\n            case 'all':\n                return 'Все';\n            case '0':\n                return 'Без пересадок'\n            default:\n                return `${stopsKeyword} ${getPluralForm(plural.select(Number(stopsKeyword)), 'пересадка', 'пересадки', 'пересадок', 'пересадки')}`;\n        }\n    }\n\n    render() {\n        const { filters } = this.props;\n        const switchOnState = Object.values(filters).every(filter => filter === true);\n\n        return (\n            <aside className=\"layovers\">\n                <div className=\"layovers-inner\">\n                    <h2 className=\"layovers__heading\">\n                        Количество пересадок\n                    </h2>\n                    <ul className=\"layovers__list\">\n                        <li className=\"layovers__item\">\n                            <input onChange={this.onChangeAll} checked={!!switchOnState} id='stopsall' type=\"checkbox\" className=\"layovers__item-checkbox\"/>\n                            <label htmlFor='stopsall' className=\"layovers__item-label\">\n                                {this.getLayoverTitle('all')}\n                            </label>\n                        </li>\n                        {\n                            Object.keys(filters).map((filter, i) => {\n                                // 🤔 как-то неочевидно выходит получение 0/1/2/3 от stopsN\n                                const stopsKeyword = filter[filter.length - 1];\n\n                                return (\n                                    <li className=\"layovers__item\" key={`${filter}-${i}`}>\n                                        <input onChange={this.onChange} checked={!!filters[filter]} id={filter} type=\"checkbox\" className=\"layovers__item-checkbox\"/>\n                                        <label htmlFor={filter} className=\"layovers__item-label\">\n                                            {this.getLayoverTitle(stopsKeyword)}\n                                        </label>\n                                    </li>\n                                );\n                            })\n                        }\n                    </ul>\n                </div>\n            </aside>\n        );\n    }\n};\n\nexport default Layovers;","import React from 'react';\nimport { DateTime } from 'luxon';\nimport { Ticket as ITicket } from '../../redux/tickets/types';\nimport { getPluralForm } from '../../helpers/formatters';\nimport './ticket.css';\n\ninterface Props {\n    ticket: ITicket;\n}\n\nconst Ticket: React.FC<Props> = (props: Props) => {\n    const { ticket: {price, segments, carrier} } = props;\n\n    const formettedPrice = new Intl.NumberFormat('ru-RU',\n        {\n            style: 'currency',\n            currency: 'RUB',\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 0\n        }\n    ).format(price);\n\n    const plural = new Intl.PluralRules('ru-RU');\n\n    return (\n        <li className=\"ticket\">\n            <p className=\"ticket__price\">{formettedPrice}</p>\n            <img className=\"ticket__logo\" src={`//pics.avs.io/99/36/${carrier}.png`} alt={`${carrier} logo`} srcSet={`//pics.avs.io/99/36/${carrier}@2x.png 2x`} />\n            {segments.map(({date, destination, origin, duration, stops}, i) => {\n                const start = DateTime.fromISO(date);\n                const end = start.plus({minutes: duration});\n                const interval = start.until(end);\n\n                const hasStops = stops.length > 0;\n                const layoversForm = getPluralForm(plural.select(stops.length), 'пересадка', 'пересадки', 'пересадок', 'пересадки');\n\n                const stopsHeding = hasStops ? `${stops.length} ${layoversForm}` : 'Без пересадок';\n                const stopsInfo = hasStops ? (stops.map(stop => stop)).join(', ') : 'Прямой';\n\n                return (\n                    <dl key={i} className=\"ticket__segment\">\n                        <div className=\"ticket__way\">\n                            <dt className=\"ticket__details-heading\">{origin} – {destination}</dt>\n                            <dd className=\"ticket__details-value\">{interval.toFormat('hh:mm')}</dd>\n                        </div>\n                        <div className=\"ticket__travel\">\n                            <dt className=\"ticket__details-heading\">В пути</dt>\n                            <dd className=\"ticket__details-value\">{interval.toDuration(['hours', 'minutes']).toFormat('hhч mм')}</dd>\n                        </div>\n                        <div className=\"ticket__layouts\">\n                            <dt className=\"ticket__details-heading\">{stopsHeding}</dt>\n                            <dd className=\"ticket__details-value\">{stopsInfo}</dd>\n                        </div>\n                    </dl>\n                );\n            })}\n        </li>\n    );\n};\n\nexport default Ticket;","import React from 'react';\nimport './tickets.css';\nimport { Ticket as ITicket } from '../../redux/tickets/types';\nimport Ticket from '../ticket/ticket';\n\ninterface Props {\n    tickets: ITicket[]\n    cheapest: boolean\n    onSelect: (value: boolean) => void;\n}\n\nclass Tickets extends React.PureComponent<Props> {\n    onChangeRadio = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n\n        this.props.onSelect(value === 'cheap');\n    }\n\n    render() {\n        const { tickets, cheapest } = this.props;\n\n        return (\n            <main className=\"tickets\">\n                <div className=\"tickets__filter\">\n                    <input onChange={this.onChangeRadio} className=\"tickets__filter-radio\" id=\"most-cheap\" type=\"radio\" name=\"most\" value=\"cheap\" checked={!!cheapest} />\n                    <label htmlFor=\"most-cheap\" className=\"tickets__filter-label\">\n                        Самый дешёвый\n                    </label>\n                    <input onChange={this.onChangeRadio} className=\"tickets__filter-radio\" id=\"most-quick\" type=\"radio\" name=\"most\" value=\"quick\" checked={!cheapest} />\n                    <label htmlFor=\"most-quick\" className=\"tickets__filter-label\">\n                        Самый быстрый\n                    </label>\n                </div>\n\n                <ul className=\"tickets__list\">\n                    {tickets.map((ticket, i) => <Ticket key={`${i}-${ticket.carrier}-${ticket.segments[0].destination}-${ticket.segments[0].date}-${ticket.segments[1].destination}-${ticket.segments[1].date}`} ticket={ticket} />)}\n                </ul>\n            </main>\n        );\n    }\n};\n\nexport default Tickets;","import React from 'react';\nimport './header.css';\nimport logo from './logo.svg';\n\nconst Header: React.FC = () => {\n    return (\n        <header className=\"header\">\n            <img src={logo} className=\"header__logo\" alt=\"Aviasales logo\" />\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport './plug.css';\n\n\nconst Plug: React.FC = () => {\n    return (\n        <div>\n            <div className=\"plug\">\n                Мы нашли много рейсов, но ни один не соответствует заданным фильтрам\n                <p className=\"plug__additional-text\">\n                    Измените количество пересадок, чтобы посмотреть другие варианты передётов\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Plug;\n","import React from 'react';\nimport './error.css';\n\nconst Error: React.FC = () => {\n    return (\n        <div className=\"error\">\n            Произошла ошибка\n            <p className=\"error__additional-text\">\n                Мы уже отправили её на свои сервера. Попробуйте перезагрузить страницу — иногда это помогает ;)\n            </p>\n        </div>\n    );\n};\n\nexport default Error;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport actions from './redux/actionsCombine';\nimport { AppState } from './redux/store';\nimport Layovers from './components/layovers/layovers';\nimport Tickets from './components/tickets/tickets';\nimport Header from './components/header/header';\nimport Plug from './components/plug/plug';\nimport Error from './components/error/error';\n\nconst {\n  startSearching,\n  changeMostFilter,\n  changeLayoverFilter,\n  turnAllLayoverFiltersOn,\n  turnAllLayoverFiltersOff\n} = actions;\n\ninterface Props {\n  startSearching: typeof startSearching;\n  changeMostFilter: typeof changeMostFilter;\n  changeLayoverFilter: typeof changeLayoverFilter;\n  turnAllLayoverFiltersOn: typeof turnAllLayoverFiltersOn;\n  turnAllLayoverFiltersOff: typeof turnAllLayoverFiltersOff;\n  tickets: AppState['tickets']['tickets'];\n  filters: AppState['filters'];\n  system: AppState['system'];\n}\n\nclass App extends React.Component<Props> {\n  componentDidMount() {\n    const { startSearching } = this.props;\n\n    startSearching();\n  }\n\n  render() {\n    const {\n      tickets,\n      filters: {\n        cheapest,\n        layovers\n      },\n      system: {\n        endSearch,\n        hasError\n      },\n      changeMostFilter,\n      changeLayoverFilter,\n      turnAllLayoverFiltersOn,\n      turnAllLayoverFiltersOff\n    } = this.props;\n\n    return (\n      <div className=\"app\">\n        <Header />\n        {hasError && <Error />}\n        {Object.keys(layovers).length > 0 &&\n          <Layovers filters={layovers} onChange={changeLayoverFilter} onSwitchOn={turnAllLayoverFiltersOn} onSwitchOff={turnAllLayoverFiltersOff} />\n        }\n        {endSearch && tickets && tickets.length === 0 &&\n            <Plug />\n        }\n        {tickets && tickets.length > 0 &&\n            <Tickets tickets={tickets} cheapest={cheapest} onSelect={changeMostFilter} />\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    tickets: state.tickets.tickets,\n    filters: state.filters,\n    system: state.system\n  };\n}\n\nconst mapDispatchToProps = {\n  startSearching,\n  changeLayoverFilter,\n  changeMostFilter,\n  turnAllLayoverFiltersOn,\n  turnAllLayoverFiltersOff\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { State, ActionsTypes } from './types';\n\nconst initialState: State = {\n    theme: 'white',\n    locale: 'ru-RU',\n    endSearch: false,\n    hasError: false\n};\n\nexport function systemReducer(\n    state = initialState,\n    action: ActionsTypes\n): State {\n    switch (action.type) {\n        case 'CHANGE_LOCALE': {\n            return {\n                ...state,\n                locale: action.locale\n            };\n        }\n        case 'CHANGE_THEME':\n            return {\n                ...state,\n                theme: action.theme\n            };\n        case 'END_SEARCH':\n            return {\n                ...state,\n                endSearch: true\n            }\n        case 'HAS_ERROR':\n            return {\n                ...state,\n                hasError: true\n            }\n        default:\n            return state;\n    }\n};","import { State, ActionsTypes, LayoverFilter } from './types';\n\nconst initialState: State = {\n    layovers: {},\n    cheapest: true\n};\n\nfunction changeAllLayovers(prevLayovers: LayoverFilter, state: boolean) {\n    return Object.keys(prevLayovers).reduce((prev: LayoverFilter, key) => {\n        prev[key] = state;\n        return prev;\n    }, {})\n}\n\nexport function filtersReducer(\n    state = initialState,\n    action: ActionsTypes\n): State {\n    switch (action.type) {\n        case 'CHANGE_LAYOVER_FILTER': {\n            return {\n                ...state,\n                layovers: {\n                    ...state.layovers,\n                    ...action.layovers\n                }\n            };\n        }\n        case 'CHANGE_MOST_FILTER':\n            return {\n                ...state,\n                cheapest: action.cheapest\n            }\n        case 'TURN_ALL_LAYOVER_FILTERS_ON':\n            return {\n                ...state,\n                layovers: changeAllLayovers(state.layovers, true)\n            };\n        case 'TURN_ALL_LAYOVER_FILTERS_OFF':\n            return {\n                ...state,\n                layovers: changeAllLayovers(state.layovers, false)\n            };\n        default:\n            return state;\n    }\n};","import { State, ActionsTypes } from './types';\n\nconst initialState: State = {};\n\nexport function ticketsReducer(\n    state = initialState,\n    action: ActionsTypes\n): State {\n    switch (action.type) {\n        case 'PUT_TICKETS':\n            return {\n                ...state,\n                tickets: action.tickets\n            };\n        default: {\n            return state;\n        }\n    }\n  };\n\nexport default ticketsReducer;\n","import { put, take, select, all, call } from 'redux-saga/effects';\nimport { eventChannel } from 'redux-saga';\nimport actions from './actionsCombine';\nimport { StartSearching } from './tickets/types';\nimport { AppState } from './store';\n\nconst { ticketsResponseSuccess, changeLayoverFilter, endSearch, hasError } = actions;\n\nconst getFilters = (state: AppState) => state.filters;\nconst getSystem = (state: AppState) => state.system;\n\nconst myWorker = new Worker(\"worker.js\");\n\nfunction createWorkerChannel() {\n    return eventChannel(emit => {\n        const pingHandler = (event: MessageEvent) => {\n          const result = event.data;\n          emit(result);\n        }\n\n        myWorker.onmessage = pingHandler;\n\n        const unsubscribe = () => {\n          myWorker.terminate();\n        };\n\n        return unsubscribe\n      })\n}\n\nfunction* getTickets() {\n    const workerChannel = yield call(createWorkerChannel);\n\n    while (true) {\n        const payload = yield take(workerChannel);\n\n        const { tickets, layovers, stopSearch, error } = payload;\n\n        if (tickets) yield put(ticketsResponseSuccess(tickets));\n        if (layovers) yield put(changeLayoverFilter(layovers));\n        if (stopSearch) yield put(endSearch());\n        if (error) yield put(hasError());\n    }\n}\n\nfunction* listenFiltersChange() {\n    while (true) {\n        yield take(['CHANGE_MOST_FILTER', 'CHANGE_LAYOVER_FILTER', 'TURN_ALL_LAYOVER_FILTERS_ON', 'TURN_ALL_LAYOVER_FILTERS_OFF']);\n\n        const {endSearch} = yield select(getSystem);\n        const filters = yield select(getFilters)\n\n        // если поиск ещё не закончился, то пока ничего не шлём\n        endSearch && myWorker.postMessage({\n            action: 'sort',\n            filters\n        });\n    }\n}\n\nfunction* start() {\n  while (true) {\n    yield take<StartSearching>('START_SEARCHING');\n    const filters = yield select(getFilters)\n\n    myWorker.postMessage({\n        action: 'getTickets',\n        filters\n    });\n  }\n}\n\nexport default function *rootSaga() {\n    yield all([\n        start(),\n        getTickets(),\n        listenFiltersChange()\n    ]);\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { systemReducer } from './system/reducers';\nimport { filtersReducer } from './filters/reducers';\nimport { ticketsReducer } from './tickets/reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = combineReducers({\n    system: systemReducer,\n    filters: filtersReducer,\n    tickets: ticketsReducer\n});\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nexport type AppState = ReturnType<typeof rootReducer>\n\nsagaMiddleware.run(rootSaga as any);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}